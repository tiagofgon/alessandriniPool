This directory contains the standard C++11 implementation of the vath 
library, in the Unix-Linux environment.

The standard C++11 implementation in Windows, using Visual Studio 2013,
compiles and executes flawlessly. The same implementation should be
fully portable to Unix-Linux. However, since the C++11 threads support
of the GNU compiler is experimental for the time being, there are some
compilation and execution problems that I describe.


GNU 4.8.2
=========

Compilation:
-----------

Everything compiles correctly. The only problem arises from the atomic
classes, like SpMutex (spin mutex), SpBLock (spin wait), RingBuffer 
(synchronized circular buffer) implemented using atomic synchronizations
with acquire or release memory orderings. This was not accepted by the
compiler, which only takes the strongest sequential consistency memory
ordering. 

We then introduced other classes, SpMutexSC, SpBlockSC, RingBufferSC, that
adopt the strongest (default) sequential consistency memory model. This
solves the compilation problem.

Execution
---------
Although the thread management utilities covered by the <thread> header
compile correctly, execution is aborted because this interface is not
operational. 

This is easily corrected: just link with the TBB library (-ltbb). TBB
introduces an implementation of the <thread> header in the std namespace
that is then used by the code.

Conclusion: for GNU 4.8.2:

*) Use the SC classes when using the std::atomic utilities
*) set the USING_TBB environment variable. This links with TBB.


